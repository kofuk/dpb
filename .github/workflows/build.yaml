name: Build Images
on: push

permissions:
  contents: read
  packages: write

jobs:
  target-apps:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.collect.outputs.apps }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Collect build targets
        id: collect
        run: |
          tmp=$(mktemp)

          for dir in */; do
            image_ref="ghcr.io/${GITHUB_REPOSITORY}/${dir%/}:$(cat "${dir}/TAG")"
            if ! docker manifest inspect "${image_ref}"; then
              echo "${dir%/}" >> "${tmp}"
            fi
          done

          echo "apps=$(cat "${tmp}" | jq --null-input --raw-input --indent 0 '[inputs]')" >>"${GITHUB_OUTPUT}"

  build:
    needs: target-apps
    # GitHub Actions doesn't allow empty matrix.
    if: ${{ needs.target-apps.outputs.apps != '[]' }}
    strategy:
      matrix:
        app: ${{ fromJson(needs.target-apps.outputs.apps) }}
    name: Build ${{ matrix.app }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Extract tag
        id: tag
        run: |
          echo "tag=ghcr.io/${GITHUB_REPOSITORY}/${{ matrix.app }}:$(cat "${{ matrix.app }}/TAG")" >>"${GITHUB_OUTPUT}"
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          tags: ${{ steps.tag.outputs.tag }}
          context: ${{ matrix.app }}
          push: true
